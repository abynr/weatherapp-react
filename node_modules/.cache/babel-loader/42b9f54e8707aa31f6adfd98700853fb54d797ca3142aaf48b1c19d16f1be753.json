{"ast":null,"code":"var _jsxFileName = \"/Users/bryanzhang/weather-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: '55f80c80ed08bd38e0520e8043bce59b',\n  base: 'https://api.openweathermap.org/data/2.5/'\n};\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const search = evt => {\n    if (evt.key == 'Enter') {\n      fetch(`${api.base}weather?q=${query}`);\n    }\n  };\n  const dateBuilder = d => {\n    let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'July', 'August', 'September', 'October', 'Novemeber', 'December'];\n    let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location\",\n          children: \" Berkeley, CA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: dateBuilder(new Date())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temp\",\n          children: \"15 C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather\",\n          children: \"Sunny\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WfIlIcXSxCUve4W/aFy4QSWUDkM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","api","key","base","App","_s","query","setQuery","weather","setWeather","search","evt","fetch","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","className","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","Date","_c","$RefreshReg$"],"sources":["/Users/bryanzhang/weather-react/src/App.js"],"sourcesContent":["import React, {useState} from 'react'\nconst api ={\n  key:'55f80c80ed08bd38e0520e8043bce59b', \n  base: 'https://api.openweathermap.org/data/2.5/'\n}\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key == 'Enter') {\n      fetch(`${api.base}weather?q=${query}`)\n    }\n  }\n\n  const dateBuilder = (d) => {\n    let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', \n  'July', 'August', 'September', 'October', 'Novemeber', 'December'];\n    let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  return (\n    <div className='app'>\n      <main>\n        <div className='search-box'>\n          <input\n            type='text'\n            className='search-bar'\n            placeholder='Search...'\n          />\n        </div>\n        <div className='location-box'>\n          <div className='location'> Berkeley, CA</div>\n          <div className='date'>{dateBuilder(new Date())}</div>\n        </div>\n        <div className='weather-box'>\n          <div className='temp'>\n            15 C\n          </div>\n          <div className='weather'>\n            Sunny\n          </div>\n        </div>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}